openapi: "3.0.0"
info:
  title: "Wutsi QR API"
  description: |
    API for generating QR Code.

  version: "1.0.0"

servers:
  - url: https://wutsi-qr-server-test.herokuapp.com
    description: Sandbox
  - url: https://wutsi-qr-server-prod.herokuapp.com
    description: Production

paths:
  /v1/encoder:
    post:
      operationId: "encode"
      description: Convert an entity to its QR code representation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncodeQRCodeRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncodeQRCodeResponse'
      tags:
        - QR
      security:
        - api_key: [ 'qr-manage' ]

  /v1/decoder:
    post:
      operationId: "decode"
      description: Convert a QR code to its entity representation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecodeQRCodeRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecodeQRCodeResponse'
      tags:
        - QR
      security:
        - api_key: [ 'qr-manage' ]

components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    EncodeQRCodeRequest:
      type: object
      properties:
        type:
          type: string
          description: Name of the entity
          enum:
            - ACCOUNT
            - PRODUCT
            - URL
            - PAYMENT_REQUEST
        id:
          type: string
          description: ID of the entity
      required:
        - type
        - id

    EncodeQRCodeResponse:
      type: object
      properties:
        token:
          type: string
          description: QR Code Token

    DecodeQRCodeRequest:
      type: object
      properties:
        token:
          type: string
          description: QR code token
      required:
        - token

    Entity:
      type: object
      properties:
        type:
          type: string
          description: Name of the entity
        id:
          type: string
          description: ID of the entity
        expires:
          type: integer
          format: int64
          description: Expiry time

    DecodeQRCodeResponse:
      type: object
      properties:
        entity:
          type: object
          description: Decoded entity
          $ref: "#/components/schemas/Entity"
